<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 目光呆滞的5741号代码搬运工</title>
    <link>https://hisaige.github.io/post/</link>
    <description>Recent content in Posts on 目光呆滞的5741号代码搬运工</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 03 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hisaige.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jane 主题预览</title>
      <link>https://hisaige.github.io/post/docs/jane-theme-preview.zh-cn/</link>
      <pubDate>Tue, 06 Mar 2018 16:01:23 +0800</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/jane-theme-preview.zh-cn/</guid>
      <description>主题预览,内容有待填充。</description>
    </item>
    
    <item>
      <title>Jane Theme Preview</title>
      <link>https://hisaige.github.io/post/docs/jane-theme-preview/</link>
      <pubDate>Mon, 01 Jan 2018 16:01:23 +0800</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/jane-theme-preview/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt; is created by &lt;a href=&#34;http://daringfireball.net/&#34;&gt;Daring Fireball&lt;/a&gt;, the original guideline is &lt;a href=&#34;http://daringfireball.net/projects/markdown/syntax&#34;&gt;here&lt;/a&gt;. Its syntax, however, varies between different parsers or editors.&lt;/p&gt;

&lt;p&gt;Please note that HTML fragments in markdown source will be recognized but not parsed or rendered. Also, there may be small reformatting on the original markdown source code after saving.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker的简单使用</title>
      <link>https://hisaige.github.io/post/development/dorcker%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/development/dorcker%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>docker的简单使用 1. 安装 1.如果装了新版本，先卸载旧版 sudo yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-engine 安装所需的包 sudo yum install -y yum-utils \ device-mapper-persistent-data \ lvm2 设置稳定存储库 #</description>
    </item>
    
    <item>
      <title>idea快捷键使用</title>
      <link>https://hisaige.github.io/post/tool/idea%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/tool/idea%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%BD%BF%E7%94%A8/</guid>
      <description>idea快捷键使用 1. 快捷键 ctrl + n == 搜索类、方法、属性 ctrl + shift + n == 搜索文件 **ctrl + alt +n == 代码提示 ** / ctrl + alt + 空格 = 代码提示 alt + f7 == 查询在某处使用 ctrl</description>
    </item>
    
    <item>
      <title>rabbitMQ入门</title>
      <link>https://hisaige.github.io/post/development/rabbitmq%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/development/rabbitmq%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</guid>
      <description>RabbitMQ学习笔记 1. 基本概念 如果使用默认方式接收队列，先启动多个监听者，再启动生产者，消费方式默认为轮询分发模式，不论监听者执行效率多</description>
    </item>
    
    <item>
      <title>springclould简要入门</title>
      <link>https://hisaige.github.io/post/development/%E5%B0%9A%E7%A1%85%E8%B0%B7clould/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/development/%E5%B0%9A%E7%A1%85%E8%B0%B7clould/</guid>
      <description>尚硅谷clould 统一配置 统一配置启动方式1</description>
    </item>
    
    <item>
      <title>数据源配置</title>
      <link>https://hisaige.github.io/post/development/druid%E4%B8%A4%E7%A7%8D%E6%AF%94%E8%BE%83%E7%A8%B3%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/development/druid%E4%B8%A4%E7%A7%8D%E6%AF%94%E8%BE%83%E7%A8%B3%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F/</guid>
      <description>数据库之druid两种比较稳的配置方式 1. 方式一 pom如下，注意druid用的版本是1.1.18，低版本可能不适用 &amp;lt;!-- 分页插件 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.github.pagehelper&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;pagehelper&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.1.6&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;tk.mybatis&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mapper-spring-boot-starter&amp;lt;/artifactId&amp;gt;</description>
    </item>
    
    <item>
      <title>Math Preview</title>
      <link>https://hisaige.github.io/post/docs/math-preview/</link>
      <pubDate>Mon, 04 Mar 2019 16:01:23 +0800</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/math-preview/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.intmath.com/cg5/katex-mathjax-comparison.php&#34;&gt;KaTeX and MathJax Comparison Demo, currently processed as KaTex&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Shortcodes Preview</title>
      <link>https://hisaige.github.io/post/docs/shortcodes-preview/</link>
      <pubDate>Sun, 04 Mar 2018 16:01:23 +0800</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/shortcodes-preview/</guid>
      <description>&lt;h2 id=&#34;what-a-shortcode-is&#34;&gt;What a Shortcode is&lt;/h2&gt;

&lt;p&gt;Hugo loves Markdown because of its simple content format, but there are times when Markdown falls short. Often, content authors are forced to add raw HTML (e.g., video &lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt;) to Markdown content. We think this contradicts the beautiful simplicity of Markdown&amp;rsquo;s syntax.&lt;/p&gt;

&lt;p&gt;Hugo created &lt;strong&gt;shortcodes&lt;/strong&gt; to circumvent these limitations.&lt;/p&gt;

&lt;p&gt;A shortcode is a simple snippet inside a content file that Hugo will render using a predefined template. Note that shortcodes will not work in template files. If you need the type of drop-in functionality that shortcodes provide but in a template, you most likely want a [partial template][partials] instead.&lt;/p&gt;

&lt;p&gt;In addition to cleaner Markdown, shortcodes can be updated any time to reflect new classes, techniques, or standards. At the point of site generation, Hugo shortcodes will easily merge in your changes. You avoid a possibly complicated search and replace operation.&lt;/p&gt;

&lt;p&gt;More details: &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/&#34;&gt;https://gohugo.io/content-management/shortcodes/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Image Preview</title>
      <link>https://hisaige.github.io/post/docs/image-preview/</link>
      <pubDate>Sat, 03 Mar 2018 16:01:23 +0800</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/image-preview/</guid>
      <description>&lt;p&gt;Thanks for &lt;a href=&#34;https://github.com/liwenyip/hugo-easy-gallery&#34;&gt;liwenyip/hugo-easy-gallery&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/xianmin/hugo-theme-jane/pull/48&#34;&gt;Zebradil · Pull Request #48&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Now, we could use &lt;code&gt;{{&amp;lt; gallery &amp;gt;}}&lt;/code&gt; shortcode in hugo-theme-jane.&lt;/p&gt;

&lt;h2 id=&#34;normal-image&#34;&gt;Normal Image&lt;/h2&gt;

&lt;p&gt;This is an image in &lt;code&gt;static/image&lt;/code&gt; folder.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;![This is an image in `static/image` folder.](/image/example.jpg)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Shortcodes Notice Preview</title>
      <link>https://hisaige.github.io/post/docs/shortcode-notice/</link>
      <pubDate>Sat, 03 Mar 2018 16:01:23 +0800</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/shortcode-notice/</guid>
      <description>normal use Note example: {{% notice note %}} A notice disclaimer {{% /notice %}} Result: note A notice disclaimer You could custom title : {{% notice note 笔记 %}} A notice disclaimer {{% /notice %}} 笔记 A notice disclaimer tip {{% notice tip %}} A tip disclaimer {{% /tip %}} tip A tip disclaimer info {{% notice info %}} A info disclaimer {{% /notice %}} info An information</description>
    </item>
    
    <item>
      <title>Jane-Theme Footnote Preview</title>
      <link>https://hisaige.github.io/post/docs/doc-footnote-preview/</link>
      <pubDate>Thu, 01 Mar 2018 16:01:23 +0800</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/doc-footnote-preview/</guid>
      <description>&lt;p&gt;Hugo-theme-jane optimized for footnote. When you mouse hover the footnote&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:example&#34;&gt;&lt;a href=&#34;#fn:example&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; , footnote content will be displayed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>English Creating a New Theme</title>
      <link>https://hisaige.github.io/post/docs/english-preview/</link>
      <pubDate>Thu, 31 Aug 2017 15:43:48 +0800</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/english-preview/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>This is a very long title This is a very long title This is a very long title This is a very long title This is a very long title</title>
      <link>https://hisaige.github.io/post/docs/this-is-a-very-long-title/</link>
      <pubDate>Wed, 30 Aug 2017 15:43:48 +0800</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/this-is-a-very-long-title/</guid>
      <description>This is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long titleThis is a very long title</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://hisaige.github.io/post/docs/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>linux下git&amp;nodejs&amp;npm安装</title>
      <link>https://hisaige.github.io/post/docs/linux%E4%B8%8Bgitnodejsnpm%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/linux%E4%B8%8Bgitnodejsnpm%E5%AE%89%E8%A3%85/</guid>
      <description>linux下git&amp;nodeJS&amp;npm安装&amp;hugo部署 1. git 安装 1.安装前检查 #1.查看git版本,如果能出版本号，说明git已经安装，酌</description>
    </item>
    
    <item>
      <title>linux下git&amp;nodejs&amp;npm安装</title>
      <link>https://hisaige.github.io/post/tool/linux%E4%B8%8Bgitnodejsnpm%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/tool/linux%E4%B8%8Bgitnodejsnpm%E5%AE%89%E8%A3%85/</guid>
      <description>linux下git&amp;nodeJS&amp;npm安装&amp;hugo部署 1. git 安装 1.安装前检查 #1.查看git版本,如果能出版本号，说明git已经安装，酌</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://hisaige.github.io/post/docs/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://hisaige.github.io/post/docs/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://hisaige.github.io/post/docs/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hisaige.github.io/post/docs/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>